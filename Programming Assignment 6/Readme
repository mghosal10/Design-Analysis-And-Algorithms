Binary Search Tree

Write new member functions called
a. preOrder() that implements the preorder traversal algorithm of a binary search tree. Your member function should display each node’s data on the screen.
b. inOrder() that implements the inorder traversal algorithm of a binary search tree. Your member function should display each node’s data on the screen. 
c. nodeCount() to count the number of nodes in a binary search tree. In this function, you should use a recursive function. You can’t just use a variable such as “mySize”.

In this problem, you will write the delete member function to delete a node from a BST. Recall that to delete a node from a BST you need to consider the three cases that we discussed in class.
a. The node has no children
b. The node has only one child
c. The node has two children

Every time you delete a node, use the inorder() member function you wrote to show that the BST property is being maintained. Inorder() will print out the elements of a BST in sorted order.

INSTRUCTIONS TO EXECUTE:
cd BinarySearchTree
g++ BST.cpp  BST.h treetester.cpp
./a.out
